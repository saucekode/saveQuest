{"version":3,"sources":["components/Form.js","App.js","index.js"],"names":["SavingsForm","useState","firstName","lastName","email","formData","setFormData","errors","setErrors","handleChange","e","target","name","value","prevFormData","prevErrors","onSubmit","preventDefault","formIsValid","newErrors","trim","test","localStorage","setItem","JSON","stringify","console","log","type","onChange","className","App","showForm","setShowForm","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAuGeA,EArGK,WAClB,MAAgCC,mBAAS,CACvCC,UAAW,GACXC,SAAU,GACVC,MAAO,KAHT,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,EAA4BL,mBAAS,CACnCC,UAAW,GACXC,SAAU,GACVC,MAAO,KAHT,mBAAOG,EAAP,KAAeC,EAAf,KAMMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdP,GAAY,SAACQ,GAAD,mBAAC,eACRA,GADO,kBAETF,EAAOC,OAEVL,GAAU,SAACO,GAAD,mBAAC,eACNA,GADK,kBAEPH,EAAO,SAsCZ,OACE,uBAAMI,SAnCa,SAACN,GACpBA,EAAEO,iBAGF,IAAIC,GAAc,EACZC,EAAS,eAAQZ,GAEW,KAA9BF,EAASH,UAAUkB,SACrBF,GAAc,EACdC,EAAUjB,UAAY,0BAGS,KAA7BG,EAASF,SAASiB,SACpBF,GAAc,EACdC,EAAUhB,SAAW,yBAGO,KAA1BE,EAASD,MAAMgB,QACjBF,GAAc,EACdC,EAAUf,MAAQ,qBACR,eAAeiB,KAAKhB,EAASD,SACvCc,GAAc,EACdC,EAAUf,MAAQ,wBAGpBI,EAAUW,GAEND,IAEFI,aAAaC,QAAQ,WAAYC,KAAKC,UAAUpB,IAChDqB,QAAQC,IAAI,mBAAoBtB,KAKlC,UACE,gCACA,uBACMuB,KAAK,OACLhB,KAAK,YACLC,MAAOR,EAASH,UAChB2B,SAAUpB,IAEbF,EAAOL,WAAa,qBAAK4B,UAAU,QAAf,SAAwBvB,EAAOL,eAEtD,gCACA,uBACM0B,KAAK,OACLhB,KAAK,WACLC,MAAOR,EAASF,SAChB0B,SAAUpB,IAEbF,EAAOJ,UAAY,qBAAK2B,UAAU,QAAf,SAAwBvB,EAAOJ,cAErD,gCACA,uBACMyB,KAAK,QACLhB,KAAK,QACLC,MAAOR,EAASD,MAChByB,SAAUpB,IAEbF,EAAOH,OAAS,qBAAK0B,UAAU,QAAf,SAAwBvB,EAAOH,WAElD,gCACA,uBACMwB,KAAK,QACLhB,KAAK,QACLC,MAAOR,EAASD,MAChByB,SAAUpB,IAEbF,EAAOH,OAAS,qBAAK0B,UAAU,QAAf,SAAwBvB,EAAOH,WAElD,wBAAQwB,KAAK,SAAb,wBC5DSG,G,MAlCH,WAEV,MAAgC9B,qBAAhC,mBAAO+B,EAAP,KAAiBC,EAAjB,KAMA,OACE,sBAAKH,UAAU,MAAf,WAGKE,GAED,sBAAKF,UAAU,eAAf,UACA,mBAAGA,UAAU,UAAb,kCACA,mBAAGA,UAAU,cAAb,wFACA,uBAAOA,UAAU,WAAWI,QAbX,WACrBD,GAAY,IAYR,iCAIDD,GAGC,qCACA,qBAAKF,UAAU,SAAf,0BACA,cAAC,EAAD,YC1BRK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b27842c0.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst SavingsForm = () => {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n  });\n  const [errors, setErrors] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: '',\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Simple validation\n    let formIsValid = true;\n    const newErrors = { ...errors };\n\n    if (formData.firstName.trim() === '') {\n      formIsValid = false;\n      newErrors.firstName = 'First name is required';\n    }\n\n    if (formData.lastName.trim() === '') {\n      formIsValid = false;\n      newErrors.lastName = 'Last name is required';\n    }\n\n    if (formData.email.trim() === '') {\n      formIsValid = false;\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      formIsValid = false;\n      newErrors.email = 'Invalid email format';\n    }\n\n    setErrors(newErrors);\n\n    if (formIsValid) {\n      // Form is valid, save the data to local storage\n      localStorage.setItem('formData', JSON.stringify(formData));\n      console.log('Form data saved:', formData);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n      <input\n            type=\"text\"\n            name=\"firstName\"\n            value={formData.firstName}\n            onChange={handleChange}\n          />\n        {errors.firstName && <div className=\"error\">{errors.firstName}</div>}\n      </div>\n      <div>\n      <input\n            type=\"text\"\n            name=\"lastName\"\n            value={formData.lastName}\n            onChange={handleChange}\n          />\n        {errors.lastName && <div className=\"error\">{errors.lastName}</div>}\n      </div>\n      <div>\n      <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n        {errors.email && <div className=\"error\">{errors.email}</div>}\n      </div>\n      <div>\n      <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n        {errors.email && <div className=\"error\">{errors.email}</div>}\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default SavingsForm;\n","import MyForm from 'components/Form';\nimport './App.css';\nimport { useState } from 'react';\n\nconst App = () => {\n\n  const [showForm, setShowForm] = useState()\n\n  const handleRegister = () => {\n    setShowForm(true)\n  }\n\n  return (\n    <div className=\"App\">\n      {\n\n        !showForm\n        &&\n        <div className=\"p-top center\">\n        <p className=\"heading\">Welcome to SaveQuest</p>\n        <p className='sub-heading'>SaveQuest is a savings application that earns you profit in a week period.</p>\n        <buton className=\"save-btn\" onClick={handleRegister}>Start Saving Now</buton>\n      </div>\n      }\n\n      {showForm\n        &&\n\n        <>\n        <div className='center'>Savings form</div>\n        <MyForm/>\n        </>\n        \n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}