{"version":3,"sources":["components/Form.js","App.js","index.js"],"names":["OnboardingForm","useState","firstName","lastName","email","tierType","formData","setFormData","errors","setErrors","handleChange","e","target","name","value","prevFormData","prevErrors","userRecord","useEffect","localStorage","setItem","JSON","stringify","onSubmit","preventDefault","formIsValid","newErrors","trim","test","push","className","type","onChange","App","showForm","setShowForm","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAgJeA,EA9IQ,WACrB,MAAgCC,mBAAS,CACvCC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,KAJZ,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,EAA4BN,mBAAS,CACnCC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,KAJZ,mBAAOG,EAAP,KAAeC,EAAf,KAYMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdP,GAAY,SAACQ,GAAD,mBAAC,eACRA,GADO,kBAETF,EAAOC,OAEVL,GAAU,SAACO,GAAD,mBAAC,eACNA,GADK,kBAEPH,EAAO,SAORI,EAAa,GA+CjB,OAJAC,qBAAU,WACRC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUL,OAInD,uBAAMM,SA9Ca,SAACZ,GACpBA,EAAEa,iBAGF,IAAIC,GAAc,EACZC,EAAS,eAAQlB,GAEW,KAA9BF,EAASJ,UAAUyB,SACrBF,GAAc,EACdC,EAAUxB,UAAY,0BAGS,KAA7BI,EAASH,SAASwB,SACpBF,GAAc,EACdC,EAAUvB,SAAW,yBAGO,KAA1BG,EAASF,MAAMuB,QACjBF,GAAc,EACdC,EAAUtB,MAAQ,qBACR,eAAewB,KAAKtB,EAASF,SACvCqB,GAAc,EACdC,EAAUtB,MAAQ,wBAGa,KAA7BE,EAASD,SAASsB,SACpBF,GAAc,EACdC,EAAUrB,SAAW,yBAGvBI,EAAUiB,GAGND,IACFN,aAAaC,QAAQ,WAAYC,KAAKC,UAAUhB,IAChDW,EAAWY,KAAKvB,KAWlB,UACE,gCACCE,EAAON,WAAa,qBAAK4B,UAAU,QAAf,SAAwBtB,EAAON,YAClD,+CACY,uBACV,uBACE6B,KAAK,OACLlB,KAAK,YACLC,MAAOR,EAASJ,UAChB8B,SAAUtB,UAIhB,gCACCF,EAAOL,UAAY,qBAAK2B,UAAU,QAAf,SAAwBtB,EAAOL,WACjD,8CACW,uBACT,uBACE4B,KAAK,OACLlB,KAAK,WACLC,MAAOR,EAASH,SAChB6B,SAAUtB,UAKhB,gCACGF,EAAOJ,OAAS,qBAAK0B,UAAU,QAAf,SAAwBtB,EAAOJ,QAChD,0CACO,uBACL,uBACE2B,KAAK,QACLlB,KAAK,QACLC,MAAOR,EAASF,MAChB4B,SAAUtB,UAIhB,gCACCF,EAAOH,UAAY,qBAAKyB,UAAU,QAAf,SAAwBtB,EAAOH,WAEjD,gDACa,uBACX,yBACEQ,KAAK,WACLC,MAAOR,EAASD,SAChB2B,SAAUtB,EAHZ,UAKE,wBAAQI,MAAM,GAAd,mCACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,6BAIN,wBAAQiB,KAAK,SAAb,wBCnGSE,G,MApCH,WAEV,MAAgChC,qBAAhC,mBAAOiC,EAAP,KAAiBC,EAAjB,KAMA,OACE,sBAAKL,UAAU,MAAf,WAGKI,GAED,sBAAKJ,UAAU,eAAf,UACA,mBAAGA,UAAU,UAAb,kCACA,mBAAGA,UAAU,cAAb,wFACA,uBAAOA,UAAU,WAAWM,QAbX,WACrBD,GAAY,IAYR,iCAIDD,GAGC,qCACA,qBAAKJ,UAAU,sBAAf,0BACA,qBAAMA,UAAU,OAAhB,SACA,cAAC,EAAD,cC3BRO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f8082ea5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst OnboardingForm = () => {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    tierType: '',\n  });\n  const [errors, setErrors] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    tierType: '',\n  });\n\n//   const [userRecord, setUserRecords] = useState([])\n\n  \n\n//   console.log(userRecord)\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: '',\n    }));\n  };\n\n  const handleCalculateInterest = () => {\n    \n  }\n  let userRecord = [];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Simple validation\n    let formIsValid = true;\n    const newErrors = { ...errors };\n\n    if (formData.firstName.trim() === '') {\n      formIsValid = false;\n      newErrors.firstName = 'First name is required';\n    }\n\n    if (formData.lastName.trim() === '') {\n      formIsValid = false;\n      newErrors.lastName = 'Last name is required';\n    }\n\n    if (formData.email.trim() === '') {\n      formIsValid = false;\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      formIsValid = false;\n      newErrors.email = 'Invalid email format';\n    }\n\n    if (formData.tierType.trim() === '') {\n      formIsValid = false;\n      newErrors.tierType = 'Tier type is required';\n    }\n\n    setErrors(newErrors);\n\n\n    if (formIsValid) {\n      localStorage.setItem('formData', JSON.stringify(formData));\n      userRecord.push(formData)\n\n    }\n  };\n\n\n  useEffect(() => {\n    localStorage.setItem(\"userRecords\", JSON.stringify(userRecord))\n  })\n \n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n      {errors.firstName && <div className=\"error\">{errors.firstName}</div>}\n        <label>\n          First Name<br/>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            value={formData.firstName}\n            onChange={handleChange}\n          />\n        </label>\n      </div>\n      <div>\n      {errors.lastName && <div className=\"error\">{errors.lastName}</div>}\n        <label>\n          Last Name<br/>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            value={formData.lastName}\n            onChange={handleChange}\n          />\n        </label>\n        \n      </div>\n      <div>\n        {errors.email && <div className=\"error\">{errors.email}</div>}\n        <label>\n          Email<br/>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n        </label>\n      </div>\n      <div>\n      {errors.tierType && <div className=\"error\">{errors.tierType}</div>}\n\n        <label>\n          Select tier<br/>\n          <select\n            name=\"tierType\"\n            value={formData.tierType}\n            onChange={handleChange}\n          >\n            <option value=\"\">Select a savings tier</option>\n            <option value=\"tier_1\">Tier 1</option>\n            <option value=\"tier_2\">Tier 2</option>\n            <option value=\"tier_3\">Tier 3</option>\n          </select>\n        </label>\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default OnboardingForm;\n","import OnboardingForm from 'components/Form';\nimport './App.css';\nimport { useState } from 'react';\n\nconst App = () => {\n\n  const [showForm, setShowForm] = useState()\n\n  const handleRegister = () => {\n    setShowForm(true)\n  }\n\n  return (\n    <div className=\"App\">\n      {\n\n        !showForm\n        &&\n        <div className=\"p-top center\">\n        <p className=\"heading\">Welcome to SaveQuest</p>\n        <p className='sub-heading'>SaveQuest is a savings application that earns you profit in a week period.</p>\n        <buton className=\"save-btn\" onClick={handleRegister}>Start Saving Now</buton>\n      </div>\n      }\n\n      {showForm\n        &&\n\n        <>\n        <div className='center form-heading'>Savings form</div>\n        <div  className='form'>\n        <OnboardingForm/>\n        </div>\n        </>\n        \n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}